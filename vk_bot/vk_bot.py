from functions.storage import MongodbService
from vkbottle_types import BaseStateGroup

import os
import pytz
from vkbottle.bot import Bot, Message

from tools import statistics
from actions.registration import teacher_registration, student_registration
from actions.search import prep_and_group_search, aud_search
from actions import commands
from actions.main_menu import reminders, main_menu, schedule

TOKEN = os.environ.get('VK')

# –û–±—å—è–≤–ª–µ–Ω–∏–µ –Ω–µ–∫–æ—Ç–æ—Ä—ã—Ö –≥–ª–±–∞–ª—å–Ω—ã—Ö –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö


storage = MongodbService().get_instance()
bot = Bot(TOKEN)  # TOKEN

content_schedule = {
    'text': ['–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ üóì', '–ë–ª–∏–∂–∞–π—à–∞—è –ø–∞—Ä–∞ ‚è±', '–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è üçè', '–ù–∞ —Ç–µ–∫—É—â—É—é –Ω–µ–¥–µ–ª—é',
             '–ù–∞ —Å–ª–µ–¥—É—é—â—É—é –Ω–µ–¥–µ–ª—é',
             '–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ –∑–∞–≤—Ç—Ä–∞ üçé', '–°–ª–µ–¥—É—é—â–∞—è', '–¢–µ–∫—É—â–∞—è']}

content_commands = {'text': ['–ù–∞—á–∞—Ç—å', '–Ω–∞—á–∞—Ç—å', '–ù–∞—á–∞–ª–æ', 'start']}

content_main_menu_buttons = {'text': ['–û—Å–Ω–æ–≤–Ω–æ–µ –º–µ–Ω—é', '<==–ù–∞–∑–∞–¥', '–°–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥', '–î—Ä—É–≥–æ–µ ‚ö°', '–ü–æ–∏—Å–∫ üîé']}

content_reminders = {'text': ['–ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ üì£', '–ù–∞—Å—Ç—Ä–æ–π–∫–∏ ‚öô', '-', '+', '–°–æ—Ö—Ä–∞–Ω–∏—Ç—å']}

content_map = {'text': ['map', '–ö–∞—Ä—Ç–∞', '–∫–∞—Ä—Ç–∞', 'Map', '–°—Ö–µ–º–∞', '—Å—Ö–µ–º–∞']}

TZ_IRKUTSK = pytz.timezone('Asia/Irkutsk')

map_image = "photo-198983266_457239216"


# ==================== –ü–û–ò–°–ö ==================== #

class SuperStates(BaseStateGroup):
    SEARCH = 0
    PREP_REG = 1
    AUD_SEARCH = 2


@bot.on.message(state=SuperStates.PREP_REG)  # –°—Ç–µ–π—Ç —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–π
async def reg_prep_handler(ans: Message):
    """–°—Ç–µ–π—Ç —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–π"""
    await teacher_registration.reg_prep(bot=bot, ans=ans, storage=storage)


@bot.on.message(text="–ì—Ä—É–ø–ø—ã –∏ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–∏")  # –í—Ö–æ–∂–¥–µ–Ω–∏–µ –≤ —Å—Ç–µ–π—Ç –ø–æ–∏—Å–∫–∞
async def start_search_handler(ans: Message):
    """–í—Ö–æ–∂–¥–µ–Ω–∏–µ –≤ —Å—Ç–µ–π—Ç –ø–æ–∏—Å–∫–∞"""
    await prep_and_group_search.start_search(bot=bot, ans=ans, state=SuperStates, storage=storage)


@bot.on.message(state=SuperStates.SEARCH)  # –°—Ç–µ–π—Ç –¥–ª—è —Ä–∞–±–æ—Ç—ã –ø–æ–∏—Å–∫–∞
async def search_handler(ans: Message):
    await prep_and_group_search.search(bot=bot, ans=ans, storage=storage)


@bot.on.message(text="–ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å")  # –í—Ö–æ–∂–¥–µ–Ω–∏–µ –≤ —Å—Ç–µ–π—Ç —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–π
async def start_prep_reg_handler(ans: Message):
    await teacher_registration.start_prep_reg(bot=bot, ans=ans, state=SuperStates, storage=storage)


@bot.on.message(text="–ê—É–¥–∏—Ç–æ—Ä–∏–∏")  # –í—Ö–æ–∂–¥–µ–Ω–∏–µ –≤ —Å—Ç–µ–π—Ç –ø–æ–∏—Å–∫–∞ –∞—É–¥–∏—Ç–æ—Ä–∏–∏
async def start_aud_search_handler(ans: Message):
    """–í—Ö–æ–∂–¥–µ–Ω–∏–µ –≤ —Å—Ç–µ–π—Ç –ø–æ–∏—Å–∫–∞ –∞—É–¥–∏—Ç–æ—Ä–∏–∏"""
    await aud_search.start_search(bot=bot, ans=ans, state=SuperStates)


@bot.on.message(state=SuperStates.AUD_SEARCH)  # –°—Ç–µ–π—Ç –ø–æ–∏—Å–∫–∞ –ø–æ –∞—É–¥–∏—Ç–æ—Ä–∏—è–º
async def aud_search_handler(ans: Message):
    await aud_search.search(bot=bot, ans=ans, storage=storage)


# ==================== –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥ ==================== #


# –ö–æ–º–∞–Ω–¥–∞ start
@bot.on.message(text=content_commands['text'])
async def start_message_handler(ans: Message):
    chat_id = ans.from_id
    await commands.start(ans=ans, chat_id=chat_id, storage=storage)
    statistics.add(action='start', storage=storage, tz=TZ_IRKUTSK)


# –ö–æ–º–∞–Ω–¥–∞ –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è
@bot.on.message(text='–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è')
async def registration_handler(ans: Message):
    chat_id = ans.from_id
    await commands.registration(ans=ans, chat_id=chat_id, storage=storage)
    statistics.add(action='reg', storage=storage, tz=TZ_IRKUTSK)


# –ö–æ–º–∞–Ω–¥–∞ –ö–∞—Ä—Ç–∞
@bot.on.message(text=content_map['text'])
async def show_map_handler(ans: Message):
    await commands.show_map(ans=ans, photo_vk_name=map_image)
    statistics.add(action='map', storage=storage, tz=TZ_IRKUTSK)


# –ö–æ–º–∞–Ω–¥–∞ –ê–≤—Ç–æ—Ä—ã
@bot.on.message(text='–ê–≤—Ç–æ—Ä—ã')
async def authors_handler(ans: Message):
    await commands.authors(ans=ans)
    statistics.add(action='authors', storage=storage, tz=TZ_IRKUTSK)


@bot.on.message(text=content_schedule['text'])
async def schedule_handler(ans: Message):
    """–ü–æ–ª—É—á–µ–Ω–∏–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è"""
    await schedule.get_schedule(ans=ans, storage=storage, tz=TZ_IRKUTSK)


@bot.on.message(text=content_main_menu_buttons['text'])
async def main_menu_buttons_handler(ans: Message):
    """–û—Å–Ω–æ–≤–Ω—ã–µ –∫–Ω–æ–ø–∫–∏ –≥–ª–∞–≤–Ω–æ–≥ –º–µ–Ω—é"""
    await main_menu.processing_main_buttons(ans=ans, storage=storage, tz=TZ_IRKUTSK)


@bot.on.message(text=content_reminders['text'])
async def reminders_handler(ans: Message):
    """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–π"""
    await reminders.reminder_settings(ans=ans, storage=storage, tz=TZ_IRKUTSK)


@bot.on.message()
async def wrapper(ans: Message):
    """–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    await student_registration.start_student_reg(ans=ans, storage=storage, tz=TZ_IRKUTSK)


def main():
    """–ó–∞–ø—É—Å–∫ –±–æ—Ç–∞"""
    bot.run_forever()


if __name__ == "__main__":
    main()
