import json
from tools import keyboards

prep_reg = {}


def start_prep_reg(bot, message, storage):
    """–í—Ö–æ–∂–¥–µ–Ω–∏–µ –≤ —Å—Ç–µ–π—Ç —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–π"""

    chat_id = message.message.chat.id
    message_id = message.message.message_id
    data = message.data

    # –ü–æ—Å–ª–µ —Ç–æ–≥–æ –∫–∞–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤—ã–±—Ä–∞–ª –∏–Ω—Å—Ç–∏—Ç—É—Ç
    if 'institute' in data:
        data = json.loads(data)

        storage.save_or_update_user(chat_id=chat_id,
                                    institute=data['institute'],
                                    course='None')  # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –≤ –±–∞–∑—É –∏–Ω—Å—Ç–∏—Ç—É—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

        # –í—ã–≤–æ–¥–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å–æ —Å–ø–∏—Å–∫–æ–º –∫—É—Ä—Å–æ–≤
        bot.send_message(chat_id, text='üìö–ö—Ç–æ –ø–æ—Å—Ç–∏–≥–∞–µ—Ç –Ω–æ–≤–æ–µ, –ª–µ–ª–µ—è —Å—Ç–∞—Ä–æ–µ,\n'
                                       '–¢–æ—Ç –º–æ–∂–µ—Ç –±—ã—Ç—å —É—á–∏—Ç–µ–ª–µ–º.\n'
                                       '–ö–æ–Ω—Ñ—É—Ü–∏–π')

        msg = bot.send_message(chat_id, text='–í–≤–µ–¥–∏—Ç–µ —Å–≤–æ—ë –§–ò–û –ø–æ–ª–Ω–æ—Å—Ç—å—é.\n'
                                             '–ù–∞–ø—Ä–∏–º–µ—Ä: –ö–æ—Ä–Ω—è–∫–æ–≤ –ú–∏—Ö–∞–∏–ª –í–∏–∫—Ç–æ—Ä–æ–≤–∏—á')
        bot.register_next_step_handler(msg, reg_prep_step_2, bot, storage)
        bot.delete_message(message_id=message_id, chat_id=chat_id)

        return


def reg_prep_step_2(message, bot, storage, last_msg=None):
    """–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è"""

    chat_id = message.chat.id
    message = message.text
    user = storage.get_user(chat_id)

    if not user:
        return

    if last_msg:
        message_id = last_msg.message_id
        bot.delete_message(message_id=message_id, chat_id=chat_id)

    prep_list = storage.get_prep(message)
    if prep_list:
        prep_name = prep_list[0]['prep']
        storage.save_or_update_user(chat_id=chat_id, group=prep_name)
        bot.send_message(chat_id, text=f'–í—ã —É—Å–ø–µ—à–Ω–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–ª–∏—Å—å, –∫–∞–∫ {prep_name}!üòä\n\n'
                                       '–î–ª—è —Ç–æ–≥–æ —á—Ç–æ–±—ã –ø—Ä–æ–π—Ç–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é –ø–æ–≤—Ç–æ—Ä–Ω–æ, –Ω–∞–ø–∏—à–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ "–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è"\n',
                         reply_markup=keyboards.make_keyboard_start_menu())
        return

    elif not prep_list:
        # –î–µ–ª–∏–º –≤–≤–µ–¥–µ–Ω–Ω–æ–µ —Ñ–∏–æ –Ω–∞ —á–∞—Å—Ç–∏ –∏ –∏—â–µ–º –ø–æ –∫–∞–∂–¥–æ–π –≤ –±–∞–∑–µ
        prep_list = []
        prep_list_2 = []
        # –î–µ–ª–∏–º –ø–æ–ª—É—á–µ–Ω–Ω–æ–µ –§–ò–û –Ω–∞ –æ—Ç–¥–µ–ª—å–Ω—ã–µ —Å–ª–æ–≤–∞, –Ω–∞ –≤—ã—Ö–æ–¥–µ –∏–º–µ–µ–º –≤—Ç–æ—Ä–æ–π —Å–ø–∏—Å–æ–∫ —Å —É–Ω–∏–∫–∞–ª—å–Ω—ã–º–∏ –∑–Ω–∞—á–µ–Ω–∏—è–º–∏ –ø–æ –∑–∞–ø—Ä–æ—Å—É
        for name_unit in message.split():
            # –ò—â–µ–º –≤ –±–∞–∑–µ –ø—Ä–µ–ø–æ–¥–æ–≤ –ø–æ –∫–∞–∂–¥–æ–º—É —Å–ª–æ–≤—É
            for i in storage.get_register_list_prep(name_unit):
                prep_list.append(i)
            # –ï—Å–ª–∏ 2 —Å–ø–∏—Å–∫–∞ –Ω–µ –ø—É—Å—Ç—ã—Ö, –∏—â–µ–º —ç–ª–µ–º–µ–Ω—Ç—ã, –∫–æ—Ç–æ—Ä—ã–µ –ø–æ–≤—Ç–æ—Ä—è—é—Ç—Å—è –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ä–∞–∑
            if prep_list and prep_list_2:
                prep_list_2 = list(set(prep_list) & set(prep_list_2))
            # –ï—Å–ª–∏ –≤—Ç–æ—Ä–æ–π —Å–ø–∏—Å–æ–∫ –ø—É—Å—Ç (–µ—â–µ –æ—Å—Ç–∞–ª–∏—Å—å —Å–ª–æ–≤–∞ –∏–∑ –∑–∞–ø—Ä–æ—Å–∞, –ø–æ –∫–æ—Ç–æ—Ä—ã–º –Ω–µ —Å—Ö–æ–¥–∏–ª–∏ –≤ –±–∞–∑—É)
            elif prep_list and not prep_list_2:
                prep_list_2 = prep_list
            prep_list = []
        msg = bot.send_message(chat_id=chat_id, text=f'–í–æ–∑–º–æ–∂–Ω–æ –≤—ã –∏–º–µ–ª–ª–∏ –≤ –≤–∏–¥—É:',
                               reply_markup=keyboards.make_inline_keyboard_reg_prep(prep_list_2))
        bot.register_next_step_handler(msg, reg_prep_step_2, bot, storage, last_msg=msg)
    return


def reg_prep_choose_from_list(bot, message, storage):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∫–æ–ª–±—ç–∫ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è"""

    chat_id = message.message.chat.id
    message_id = message.message.message_id
    data = json.loads(message.data)

    # –í—ã—Ö–æ–¥–∏–º –∏–∑ —Ü–∏–∫–ª–∞ –ø–æ–∏—Å–∫–∞ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è –ø–æ –§–ò–û
    bot.clear_step_handler_by_chat_id(chat_id=chat_id)

    # –ù–∞–∑–∞–¥ –∫ –∏–Ω—Å—Ç–∏—Ç—É—Ç–∞–º
    if data['prep_id'] == 'back':
        bot.send_message(chat_id=chat_id, text='–í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Å—Ç–∏—Ç—É—Ç',
                         reply_markup=keyboards.make_inline_keyboard_choose_institute(storage.get_institutes()))
        storage.delete_user_or_userdata(chat_id)
    # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è –ø–æ –≤—ã–±—Ä–∞–Ω–Ω–æ–π –∫–Ω–æ–ø–∫–µ
    else:
        prep_name = storage.get_prep_for_id(data['prep_id'])['prep']
        storage.save_or_update_user(chat_id=chat_id, group=prep_name)
        bot.delete_message(message_id=message_id, chat_id=chat_id)
        bot.send_message(chat_id, text=f'–í—ã —É—Å–ø–µ—à–Ω–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–ª–∏—Å—å, –∫–∞–∫ {prep_name}!üòä\n\n'
                                       '–î–ª—è —Ç–æ–≥–æ —á—Ç–æ–±—ã –ø—Ä–æ–π—Ç–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é –ø–æ–≤—Ç–æ—Ä–Ω–æ, –Ω–∞–ø–∏—à–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ "–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è"\n',
                         reply_markup=keyboards.make_keyboard_start_menu())
