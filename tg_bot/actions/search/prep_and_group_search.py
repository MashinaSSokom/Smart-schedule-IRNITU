from functions.creating_schedule import full_schedule_in_str, full_schedule_in_str_prep
from functions.find_week import find_week
from functions.logger import logger
from tools import keyboards, schedule_processing, statistics

# –ì–ª–æ–±–∞–ª—å–Ω–∞—è –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è(—Å–ª–æ–≤–∞—Ä—å), –∫–æ—Ç–æ—Ä–∞—è —Ö—Ä–∞–Ω–∏—Ç –≤ —Å–µ–±–µ 3 —Å–æ—Å—Ç–æ—è–Ω–∏—è
# (–Ω–æ–º–µ—Ä —Å—Ç—Ä–∞–Ω–∏—Ü—ã; —Å–ª–æ–≤–æ, –∫–æ—Ç–æ—Ä—ã–µ –Ω–∞—Ö–æ–¥–∏–º; —Å–ø–∏—Å–æ–∫ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏—è –¥–ª—è –≤—ã—Ö–æ–¥–∞ –ø–æ —É—Å–ª–æ–≤–∏—é –≤ —Å—Ç–µ–π—Ç–µ)
Condition_request = {}


def start_search(bot, message, storage, tz):

    data = message.text
    # ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    chat_id = message.chat.id
    # –°–æ–∑–¥–∞—ë–º –∫–ª—é—á –ø–æ –∑–Ω–∞—á–µ–Ω–∏—é ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    Condition_request[chat_id] = []
    # –ó–∞—Ä–∞—à–∏–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ –∏–∑ –±–∞–∑—ã
    user = storage.get_user(chat_id=chat_id)
    # –£—Å–ª–æ–≤–∏–µ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–∞–ª–∏—á–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –±–∞–∑–µ
    if '–û—Å–Ω–æ–≤–Ω–æ–µ –º–µ–Ω—é' in data and user:

        # –ó–∞–ø—É—Å–∫ —Å—Ç–µ–π—Ç–∞ —Å–æ –∑–Ω–∞—á–µ–Ω–∏–µ–º SEARCH
        msg = bot.send_message(chat_id=chat_id, text="–†–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ–∏—Å–∫–∞: ")
        bot.register_next_step_handler(msg, search, bot, storage)

        bot.send_message(chat_id=chat_id, text='–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –≥—Ä—É–ø–ø—ã –∏–ª–∏ —Ñ–∞–º–∏–ª–∏—é –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è\n'
                         '–ù–∞–ø—Ä–∏–º–µ—Ä: –ò–ë–±-18-1 –∏–ª–∏ –ò–≤–∞–Ω–æ–≤', reply_markup=keyboards.make_keyboard_start_menu())
        statistics.add(action='–û—Å–Ω–æ–≤–Ω–æ–µ –º–µ–Ω—é', storage=storage, tz=tz)
    else:

        bot.send_message(chat_id=chat_id, text='–ü—Ä–∏–≤–µ—Ç\n')
        bot.send_message(chat_id=chat_id, text='–î–ª—è –Ω–∞—á–∞–ª–∞ –ø—Ä–æ–π–¥–∏—Ç–µ –Ω–µ–±–æ–ª—å—à—É—é —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—éüòâ\n')
        bot.send_message(chat_id=chat_id, text='–í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Å—Ç–∏—Ç—É—Ç',
                         reply_markup=keyboards.make_keyboard_institutes(storage.get_institutes()))

def search(bot, message, storage):
    """–°—Ç–µ–π—Ç –¥–ª—è —Ä–∞–±–æ—Ç—ã –ø–æ–∏—Å–∫–∞"""
    # –ß–∞—Ç ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    chat_id = message.chat.id
    # –î–∞–Ω–Ω—ã–µ –≤–≤–æ–¥–∞
    data = message.text
    # –°–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏—è –ø–æ –≥—Ä—É–ø–ø–∞–º
    all_found_groups = []
    # –°–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏—è –¥–ª—è –ø—Ä–µ–ø–æ–¥–æ–≤
    all_found_prep = []
    # –ó–∞–¥–∞—ë–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è –ø–µ—Ä–≤–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    page = 1
    # –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–ª—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –≤ —Ä–∏–ª-—Ç–∞–π–º
    logger.info(f'Inline button data: {data}')
    # –£—Å–ª–æ–≤–∏–µ –¥–ª—è –ø–µ—Ä–≤–∏—á–Ω–æ–≥–æ –≤—Ö–æ–¥–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    if (storage.get_search_list(message.text) or storage.get_search_list_prep(message.text)) \
            and Condition_request[chat_id] == []:
        # –†–µ–∑—É–ª—å—Ç–∞—Ç –∑–∞–ø—Ä–æ—Å–∞ –ø–æ –≥—Ä—É–ø–ø–∞–º
        request_group = storage.get_search_list(message.text)
        # –†–µ–∑—É–ª—å—Ç–∞—Ç –∑–∞–ø—Ä–æ—Å–∞ –ø–æ –ø—Ä–µ–ø–æ–¥–∞–º
        request_prep = storage.get_search_list_prep(message.text)
        # –¶–∏–∫–ª—ã –Ω—É–∂–Ω—ã –¥–ª—è –æ–±—â–µ–≥–æ –ø–æ–∏—Å–∫–∞. –ó–¥–µ—Å—å –º—ã —É–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–µ –∫–ª—é—á–∏ –≤ –æ–±–æ–∏—Ö —Ä–µ–∫–≤–µ—Å—Ç–∞—Ö –∏ —Å–æ–∑–¥–∞—ë–º –æ–¥–∏–Ω –æ–±—â–∏–π –∫–ª—é—á, –∫–∞–∫ –¥–ª—è –≥—Ä—É–ø–ø, —Ç–∞–∫ –∏ –¥–ª—è –ø—Ä–µ–ø–æ–¥–æ–≤
        for i in request_group:
            i['search'] = i.pop('name')
        for i in request_prep:
            i['search'] = i.pop('prep_short_name')
        # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º —Å–ª–æ–≤–æ, –∫–æ—Ç–æ—Ä–æ–µ –∏—â–µ–º
        request_word = message.text
        # –°–∫–ª–µ–∏–≤–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –¥–≤—É—Ö –∑–∞–ø—Ä–æ—Å–æ–≤ –¥–ª—è –æ–±—â–µ–≥–æ –ø–æ–∏—Å–∫–∞
        request = request_group + request_prep
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤ —Ñ—É–Ω–∫—Ü–∏—é –¥–∞–Ω–Ω—ã–µ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
        keyboard = keyboards.make_keyboard_search_group(page, request)
        # –≠—Ç–∏ —Ü–∏–∫–ª—ã –∑–∞–ø–∏—Å—ã–≤–∞—é—Ç –≥—Ä—É–ø–ø—ã –∏ –ø—Ä–µ–ø–æ–¥–æ–≤ –≤ –Ω–∏–∂–Ω–µ–º —Ä–µ–≥–∏—Å—Ç—Ä–µ –¥–ª—è —É–¥–æ–±–Ω–æ–π —Ä–∞–±–æ—Ç—ã —Å –Ω–∏–º–∏
        for i in request_group:
            all_found_groups.append(i['search'].lower())
        for i in request_prep:
            all_found_prep.append(i['search'].lower())
        # –°–æ–∑–¥–∞—ë–º –æ–±—â–∏–π —Å–ø–∏—Å–æ–∫
        all_found_results = all_found_groups + all_found_prep
        # –§–æ—Ä–º–∏—Ä—É–µ–º –ø–æ–ª–Ω—ã–π –±–∞–≥–∞–∂ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        list_search = [page, request_word, all_found_results]
        # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –≤—Å–µ –¥–∞–Ω–Ω—ã–µ –ø–æ–¥ –∫–ª—é—á–æ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        Condition_request[chat_id] = list_search
        # –í—ã–≤–æ–¥–∏–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç –ø–æ–∏—Å–∫–∞ —Å –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π (–∫–ª–∏–≤–∏–∞—Ç—É—Ä —Ñ–æ—Ä–º–∏—Ä—É–µ—Ç—Å—è –ø–æ –ø–æ–∏—Å–∫–æ–≤–æ–º—É –∑–∞–ø—Ä–æ—Å—É)

        bot.send_message(chat_id=chat_id, text='–†–µ–∑—É–ª—å—Ç–∞—Ç –ø–æ–∏—Å–∫–∞', reply_markup=keyboard)

    # –ó–¥–µ—Å—å —É–ª–æ–≤–∏—è –¥–ª—è –≤—ã—Ö–æ–¥–∞ –≤ –æ—Å–Ω–æ–≤–Ω–æ–µ –º–µ–Ω—é
    elif message.text == "–û—Å–Ω–æ–≤–Ω–æ–µ –º–µ–Ω—é":
        del Condition_request[message.from_id]
        bot.send_message(chat_id=chat_id, text='–û—Å–Ω–æ–≤–Ω–æ–µ –º–µ–Ω—é', reply_markup=keyboards.make_keyboard_start_menu())
        return

    # –ó–¥–µ—Å—å —É–ª–æ–≤–∏–µ –¥–ª—è —Å–ª–æ–≤–∞ "–î–∞–ª—å—à–µ"
    elif message.text == "–î–∞–ª—å—à–µ":
        page = Condition_request[message.from_id][0]
        Condition_request[message.from_id][0] += 1
        request_word = Condition_request[message.from_id][1]
        request_group = storage.get_search_list(request_word)
        request_prep = storage.get_search_list_prep(request_word)
        for i in request_group:
            i['search'] = i.pop('name')
        for i in request_prep:
            i['search'] = i.pop('prep_short_name')
        request = request_group + request_prep
        request = request[26 * page:]
        keyboard = keyboards.make_keyboard_search_group(page + 1, request)
        bot.send_message(chat_id=chat_id, text=f"–°—Ç—Ä–∞–Ω–∏—Ü–∞ {page + 1}", reply_markup=keyboard)


    # –ü–æ –∞–Ω–∞–ª–æ–≥–∏–∏ —Å–æ —Å–ª–æ–≤–æ–º "<==–ù–∞–∑–∞–¥", —Ç–æ–ª—å–∫–æ –æ–±—Ä–∞—Ç–Ω—ã–π –ø—Ä–æ—Ü–µ—Å—Å
    elif message.text == "<==–ù–∞–∑–∞–¥":
        Condition_request[message.from_id][0] -= 1
        page = Condition_request[message.from_id][0]
        request_word = Condition_request[message.from_id][1]
        request_group = storage.get_search_list(request_word)
        request_prep = storage.get_search_list_prep(request_word)
        for i in request_group:
            i['search'] = i.pop('name')
        for i in request_prep:
            i['search'] = i.pop('prep_short_name')
        request = request_group + request_prep
        request = request[26 * (page - 1):]
        keyboard = keyboards.make_keyboard_search_group(page, request)
        bot.send_message(chat_id=chat_id, text=f"–°—Ç—Ä–∞–Ω–∏—Ü–∞ {page}", reply_markup=keyboard)

    # –£—Å–ª–æ–≤–∏–µ –¥–ª—è –≤—ã–≤–æ–¥–∞ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è –¥–ª—è –≥—Ä—É–ø–ø—ã –∏ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è –ø–æ –Ω–µ–¥–µ–ª—è–º
    elif ('–ù–∞ —Ç–µ–∫—É—â—É—é –Ω–µ–¥–µ–ª—é' == data or '–ù–∞ —Å–ª–µ–¥—É—é—â—É—é –Ω–µ–¥–µ–ª—é' == data):
        group = Condition_request[message.from_id][1]
        request_word = Condition_request[message.from_id][1]
        request_group = storage.get_search_list(request_word)
        request_prep = storage.get_search_list_prep(request_word)
        # –ï—Å–ª–∏ –µ—Å—Ç—å –∑–∞–ø—Ä–æ—Å –¥–ª—è –≥—Ä—É–ø–ø—ã, —Ç–æ —Ñ–æ—Ä–º–∏—Ä—É–µ–º —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –¥–ª—è –≥—Ä—É–ø–ø—ã, –∞ –µ—Å–ª–∏ –Ω–µ—Ç, —Ç–æ –¥–ª—è –ø—Ä–µ–ø–æ–¥–∞
        if request_group:
            schedule = storage.get_schedule(group=group)
        elif request_prep:
            schedule = request_prep[0]
        if schedule['schedule'] == []:
            bot.send_message(chat_id=chat_id, text="–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ\n–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ‚è±")
            return

        schedule = schedule['schedule']
        week = find_week()

        # –º–µ–Ω—è–µ–º –Ω–µ–¥–µ–ª—é
        if data == '–ù–∞ —Å–ª–µ–¥—É—é—â—É—é –Ω–µ–¥–µ–ª—é':
            week = 'odd' if week == 'even' else 'even'

        week_name = '—á–µ—Ç–Ω–∞—è' if week == 'odd' else '–Ω–µ—á–µ—Ç–Ω–∞—è'
        if request_group:
            schedule_str = full_schedule_in_str(schedule, week=week)
        elif request_prep:
            schedule_str = full_schedule_in_str_prep(schedule, week=week)

        bot.send_message(chat_id=chat_id, text=f'–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ {group}\n'f'–ù–µ–¥–µ–ª—è: {week_name}', reply_markup=keyboards.make_keyboard_start_menu())
        # –û—Ç–ø—Ä–∞–≤–∫–∞ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è
        schedule_processing.sending_schedule(ans=message, schedule_str=schedule_str)

        return

    # –£—Å–ª–æ–≤–∏—è –¥–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –ø–æ–∏—Å–∫–∞, —Ç–æ–±–∏—à—å –æ–∫–æ–Ω—á–∞—Ç–µ–ª—å–Ω—ã–π –≤—ã–±–æ—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    elif (storage.get_search_list(message.text) or storage.get_search_list_prep(message.text)) and message.text.lower() in \
            (i for i in Condition_request[message.from_id][2]):
        choose = message.text
        Condition_request[message.from_id][1] = choose
        request_word = Condition_request[message.from_id][1]
        request_group = storage.get_search_list(request_word)
        request_prep = storage.get_search_list_prep(request_word)
        for i in request_group:
            i['search'] = i.pop('name')
        for i in request_prep:
            i['search'] = i.pop('prep_short_name')
        if request_group:
            bot.send_message(chat_id=chat_id, text=f"–í—ã–±–µ—Ä–∏—Ç–µ –Ω–µ–¥–µ–ª—é –¥–ª—è –≥—Ä—É–ø–ø—ã {choose}",
                             reply_markup=keyboards.make_keyboard_choose_schedule())
        elif request_prep:
            bot.send_message(chat_id=chat_id, text=f"–í—ã–±–µ—Ä–∏—Ç–µ –Ω–µ–¥–µ–ª—é –¥–ª—è –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è {request_prep[0]['prep']}",
                             reply_markup=keyboards.make_keyboard_choose_schedule())
        else:
            return
    # –û–±—â–µ–µ –∏—Å–∫–ª—é—á–µ–Ω–∏—è –¥–ª—è —Ä–∞–∑–Ω—ã—Ö —Å–ª—É—á–∞–µ–º, –∫–æ—Ç–æ—Ä—ã–µ –º–æ–≥—É —Å–ª–æ–º–∞—Ç—å –±–æ—Ç–∞. (–ü—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏ –∫–æ–ø–∏—è –ø–µ—Ä–≤–æ–≥–æ IF)
    else:
        if Condition_request[message.from_id] and storage.get_search_list(message.text) or storage.get_search_list_prep(
                message.text):
            request_group = storage.get_search_list(message.text)
            request_prep = storage.get_search_list_prep(message.text)
            for i in request_group:
                i['search'] = i.pop('name')
            for i in request_prep:
                i['search'] = i.pop('prep_short_name')
            request_word = message.text
            request = request_group + request_prep
            keyboard = keyboards.make_keyboard_search_group(page, request)
            for i in request_group:
                all_found_groups.append(i['search'].lower())
            for i in request_prep:
                all_found_prep.append(i['search'].lower())
            all_found_results = all_found_groups + all_found_prep
            list_search = [page, request_word, all_found_results]
            Condition_request[chat_id] = list_search
            bot.send_message(chat_id=chat_id, text="–†–µ–∑—É–ª—å—Ç–∞—Ç –ø–æ–∏—Å–∫–∞",
                             reply_markup=keyboard)

        else:
            if len(Condition_request[chat_id]) == 3:
                Condition_request[chat_id][1] = ''
                bot.send_message(chat_id=chat_id, text="–ü–æ–∏—Å–∫ –Ω–µ –¥–∞–ª —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ üòï")
                return
            else:
                bot.send_message(chat_id=chat_id, text="–ü–æ–∏—Å–∫ –Ω–µ –¥–∞–ª —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ üòï")
                return
