from datetime import datetime, timedelta
import platform
import locale
import pytz

TZ_IRKUTSK = pytz.timezone('Asia/Irkutsk')
# –æ–ø—Ä–µ–¥–µ–ª—è–µ–º –Ω–∞ Linux –∏–ª–∏ –Ω–∞ Windows –º—ã –∑–∞–ø—É—Å–∫–∞–µ–º—Å—è
locale_name = ('ru_RU.UTF-8' if platform.system() == 'Linux' else 'ru_RU')
locale.setlocale(locale.LC_TIME, locale_name)


def full_schedule_in_str(schedule: list, week: str) -> list:
    schedule_str = []
    day_now = datetime.now(TZ_IRKUTSK).strftime('%A').lower()
    for one_day in schedule:
        day = one_day['day'].upper()
        lessons = one_day['lessons']
        lesson_counter = 0  # –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–∞—Ä –≤ –¥–Ω–µ.
        lessons_str = '-------------------------------------------\n'

        for lesson in lessons:
            name = lesson['name']
            time = lesson['time']
            lesson_week = lesson['week']

            # —Å–º–æ—Ç—Ä–∏–º —Ç–æ–ª—å–∫–æ –Ω–∞ –ø–∞—Ä—ã –∏–∑ –Ω—É–∂–Ω–æ–π –Ω–µ–¥–µ–ª–∏
            if lesson_week != week and lesson_week != 'all':
                continue

            if name == '—Å–≤–æ–±–æ–¥–Ω–æ':
                lessons_str += f'{time}\n' \
                               f'{name}'

            else:
                time = lesson['time']
                info = lesson['info'].replace(",", "")
                prep = ', '.join(lesson['prep'])
                aud = f'–ê—É–¥–∏—Ç–æ—Ä–∏—è: {", ".join(lesson["aud"])}\n' if lesson["aud"] and lesson["aud"][0] else ''

                lessons_str += f'{time}\n' \
                               f'{aud}' \
                               f'üëâ{name}\n' \
                               f'{info} {prep}'

            lessons_str += '\n-------------------------------------------\n'

            lesson_counter += 1

        # –ü—Ä–æ–≤–µ—Ä–∫–∞, —á—Ç–æ –¥–µ–Ω—å –Ω–µ –ø—É—Å—Ç–æ–π
        if lesson_counter:
            if day_now == day.lower():
                schedule_str.append(f'\nüçè{day}üçè\n'
                                    f'{lessons_str}')
            else:
                schedule_str.append(f'\nüçé{day}üçé\n'
                                    f'{lessons_str}')
    return schedule_str


def get_one_day_schedule_in_str(schedule: list, week: str) -> str:
    day_now = datetime.now(TZ_IRKUTSK).strftime('%A')
    for one_day in schedule:
        day = one_day['day'].upper()
        if day.lower() == day_now.lower():
            lessons = one_day['lessons']

            lesson_counter = 0  # –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–∞—Ä –≤ –¥–Ω–µ.
            lessons_str = '-------------------------------------------\n'
            for lesson in lessons:
                name = lesson['name']
                time = lesson['time']
                lesson_week = lesson['week']

                # —Å–º–æ—Ç—Ä–∏–º —Ç–æ–ª—å–∫–æ –Ω–∞ –ø–∞—Ä—ã –∏–∑ –Ω—É–∂–Ω–æ–π –Ω–µ–¥–µ–ª–∏
                if lesson_week != week and lesson_week != 'all':
                    continue

                if name == '—Å–≤–æ–±–æ–¥–Ω–æ':
                    lessons_str += f'{time}\n' \
                                   f'{name}'

                else:
                    aud = f'–ê—É–¥–∏—Ç–æ—Ä–∏—è: {", ".join(lesson["aud"])}\n' if lesson["aud"] and lesson["aud"][0] else ''

                    time = lesson['time']
                    info = lesson['info'].replace(",", "")
                    prep = ', '.join(lesson['prep'])

                    lessons_str += f'{time}\n' \
                                   f'{aud}' \
                                   f'üëâ{name}\n' \
                                   f'{info} {prep}'
                lessons_str += '\n-------------------------------------------\n'
                lesson_counter += 1

            if lesson_counter:
                return f'\nüçè{day}üçè\n{lessons_str}'
            else:
                return ''


def get_next_day_schedule_in_str(schedule: list, week: str) -> str:
    day_tomorrow = (datetime.now(TZ_IRKUTSK) + timedelta(days=1)).strftime('%A')
    for one_day in schedule:
        day = one_day['day'].upper()
        if day.lower() == day_tomorrow.lower():
            lessons = one_day['lessons']

            lesson_counter = 0  # –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–∞—Ä –≤ –¥–Ω–µ.
            lessons_str = '-------------------------------------------\n'
            for lesson in lessons:
                name = lesson['name']
                time = lesson['time']
                lesson_week = lesson['week']

                # —Å–º–æ—Ç—Ä–∏–º —Ç–æ–ª—å–∫–æ –Ω–∞ –ø–∞—Ä—ã –∏–∑ –Ω—É–∂–Ω–æ–π –Ω–µ–¥–µ–ª–∏
                if lesson_week != week and lesson_week != 'all':
                    continue

                if name == '—Å–≤–æ–±–æ–¥–Ω–æ':
                    lessons_str += f'{time}\n' \
                                   f'{name}'

                else:
                    aud = f'–ê—É–¥–∏—Ç–æ—Ä–∏—è: {", ".join(lesson["aud"])}\n' if lesson["aud"] and lesson["aud"][0] else ''

                    time = lesson['time']
                    info = lesson['info'].replace(",", "")
                    prep = ', '.join(lesson['prep'])

                    lessons_str += f'{time}\n' \
                                   f'{aud}' \
                                   f'üëâ{name}\n' \
                                   f'{info} {prep}'
                lessons_str += '\n-------------------------------------------\n'
                lesson_counter += 1

            if lesson_counter:
                return f'\nüçé{day}üçé\n{lessons_str}'
            else:
                return ''